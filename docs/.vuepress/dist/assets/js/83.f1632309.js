(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{440:function(e,t,s){"use strict";s.r(t);var a=s(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"run-a-full-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node"}},[e._v("#")]),e._v(" Run a Full Node")]),e._v(" "),s("p",[e._v("This document details how to join the Secret Network "),s("code",[e._v("mainnet")]),e._v(" as a validator.")]),e._v(" "),s("h3",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),s("ul",[s("li",[e._v("Up to date SGX ("),s("a",{attrs:{href:"https://learn.scrt.network/sgx.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Read this"),s("OutboundLink")],1),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/setup-sgx.html"}},[e._v("Setup")]),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/verify-sgx.html"}},[e._v("Verify")]),e._v(")")],1),e._v(" "),s("li",[e._v("Ubuntu/Debian host (with ZFS or LVM to be able to add more storage easily. Note premium SSD use is more important when adding overhead from ZFS.)")]),e._v(" "),s("li",[e._v("A public IP address")]),e._v(" "),s("li",[e._v("Open ports "),s("code",[e._v("TCP 26656 & 26657")]),e._v(" "),s("em",[e._v("Note: If you're behind a router or firewall then you'll need to port forward on the network device.")])]),e._v(" "),s("li",[e._v("Reading https://docs.tendermint.com/master/tendermint-core/running-in-production.html")])]),e._v(" "),s("h4",{attrs:{id:"minimum-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#minimum-requirements"}},[e._v("#")]),e._v(" Minimum requirements")]),e._v(" "),s("ul",[s("li",[e._v("Up to date SGX ("),s("a",{attrs:{href:"https://learn.scrt.network/sgx.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Read this"),s("OutboundLink")],1),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/setup-sgx.html"}},[e._v("Setup")]),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/verify-sgx.html"}},[e._v("Verify")]),e._v(")")],1),e._v(" "),s("li",[e._v("1GB RAM")]),e._v(" "),s("li",[e._v("100GB HDD (Premium SSD)")]),e._v(" "),s("li",[e._v("1 dedicated core of any Intel Skylake processor (Intel® 6th generation) or better")])]),e._v(" "),s("h4",{attrs:{id:"recommended-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recommended-requirements"}},[e._v("#")]),e._v(" Recommended requirements")]),e._v(" "),s("ul",[s("li",[e._v("Up to date SGX ("),s("a",{attrs:{href:"https://learn.scrt.network/sgx.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Read this"),s("OutboundLink")],1),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/setup-sgx.html"}},[e._v("Setup")]),e._v(", "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/verify-sgx.html"}},[e._v("Verify")]),e._v(")")],1),e._v(" "),s("li",[e._v("2GB RAM")]),e._v(" "),s("li",[e._v("256GB SSD (Premium SSD)")]),e._v(" "),s("li",[e._v("2 dedicated cores of any Intel Skylake processor (Intel® 6th generation) or better")])]),e._v(" "),s("h3",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),s("h4",{attrs:{id:"install-the-secretnetwork-initialize-your-node-and-validate-the-genesis-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-the-secretnetwork-initialize-your-node-and-validate-the-genesis-file"}},[e._v("#")]),e._v(" Install the "),s("code",[e._v("secretnetwork")]),e._v(", initialize your node and validate the genesis file:")]),e._v(" "),s("p",[s("em",[e._v("NOTE")]),e._v(": Substitute "),s("strong",[e._v("$YOUR_MONIKER")]),e._v(" (below) with your node's nickname or alias.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ~\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/enigmampc/SecretNetwork/releases/download/v1.0.4/secretnetwork_1.0.4_amd64.deb\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"97c1aa2421a203184e541928cc9c409c50afcfac5cbd55993e6a9593399587f9 secretnetwork_1.0.4_amd64.deb"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" sha256sum --check\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" ./secretnetwork_1.0.4_amd64.deb\n\nsecretd init "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YOUR_MONIKER")]),e._v('"')]),e._v(" --chain-id secret-2\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" -O ~/.secretd/config/genesis.json "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/enigmampc/SecretNetwork/releases/download/v1.0.4/genesis.json"')]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"4ca53e34afed034d16464d025291fe16a847c9aca0a259f9237413171b19b4cf .secretd/config/genesis.json"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" sha256sum --check\n\nsecretd validate-genesis\n")])])]),s("h4",{attrs:{id:"create-the-enclave-attestation-certificate-and-store-its-public-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-the-enclave-attestation-certificate-and-store-its-public-key"}},[e._v("#")]),e._v(" Create the enclave attestation certificate and store its public key:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretd init-enclave\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PUBLIC_KEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("secretd parse attestation_cert.der "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("2")]),e._v(">")]),e._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cut")]),e._v(" -c "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PUBLIC_KEY")]),e._v("\n")])])]),s("h4",{attrs:{id:"configure-secretcli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-secretcli"}},[e._v("#")]),e._v(" Configure "),s("code",[e._v("secretcli")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli config chain-id secret-2\nsecretcli config node http://rpc.enigma.co:26657\nsecretcli config output json\nsecretcli config indent "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),s("h4",{attrs:{id:"create-your-key-alias"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-your-key-alias"}},[e._v("#")]),e._v(" Create your "),s("code",[e._v("key-alias")]),e._v(":")]),e._v(" "),s("p",[e._v("If you haven't "),s("strong",[e._v("already created a key")]),e._v(", use these steps to create a secret address and send some SCRT to it. The key will be used to register your node with the Secret Network.")]),e._v(" "),s("h5",{attrs:{id:"generate-a-new-key-pair-for-yourself-change-key-alias-with-any-word-of-your-choice-this-is-just-for-your-internal-personal-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate-a-new-key-pair-for-yourself-change-key-alias-with-any-word-of-your-choice-this-is-just-for-your-internal-personal-reference"}},[e._v("#")]),e._v(" Generate a new key pair for yourself (change "),s("code",[e._v("<key-alias>")]),e._v(" with any word of your choice, this is just for your internal/personal reference):")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli keys "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),s("p",[s("strong",[e._v("⚠️Note⚠️: Backup the mnemonics!")]),e._v(" "),s("strong",[e._v("⚠️Note⚠️: Please make sure you also "),s("RouterLink",{attrs:{to:"/validators-and-full-nodes/backup-a-validator.html"}},[e._v("backup your validator")])],1)]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(": If you already have a key you can import it with the bip39 mnemonic with "),s("code",[e._v("secretcli keys add <key-alias> --recover")]),e._v(" or with "),s("code",[e._v("secretcli keys export")]),e._v(" (exports to "),s("code",[e._v("stderr")]),e._v("!!) & "),s("code",[e._v("secretcli keys import")]),e._v(".")]),e._v(" "),s("p",[e._v("Then transfer funds to the address you just created.")]),e._v(" "),s("h5",{attrs:{id:"check-that-you-have-the-funds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-that-you-have-the-funds"}},[e._v("#")]),e._v(" Check that you have the funds:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli q account "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("secretcli keys show -a "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),s("p",[e._v("If you get the following message, it means that you have no tokens yet:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("ERROR: unknown address: account secret1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx does not exist\n")])])]),s("h4",{attrs:{id:"register-and-configure-your-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-and-configure-your-node"}},[e._v("#")]),e._v(" Register and configure your node:")]),e._v(" "),s("p",[s("em",[e._v("NOTE")]),e._v(": Substitute "),s("strong",[e._v("$YOUR_KEY_NAME")]),e._v(" (below) with the "),s("code",[e._v("key-alias")]),e._v(" you created earlier.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli tx register auth ./attestation_cert.der --from "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YOUR_KEY_NAME")]),e._v('"')]),e._v(" --gas "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("250000")]),e._v(" --gas-prices "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(".25uscrt\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SEED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("secretcli query register seed "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PUBLIC_KEY")]),e._v('"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cut")]),e._v(" -c "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SEED")]),e._v("\n\nsecretcli query register secret-network-params\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p ~/.secretd/.node\n\nsecretd configure-secret node-master-cert.der "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SEED")]),e._v('"')]),e._v("\n\nperl -i -pe "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'s/^persistent_peers = ".*?"/persistent_peers = "61a3a9c3fdd9e497cf5f40cb251a68300fa2d90e\\@secret-2.node.enigma.co:26656"/\'')]),e._v(" ~/.secretd/config/config.toml\nperl -i -pe "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'s;laddr = "tcp://127.0.0.1:26657";laddr = "tcp://0.0.0.0:26657";\'')]),e._v(" ~/.secretd/config/config.toml\n")])])]),s("h4",{attrs:{id:"start-your-node-as-a-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-your-node-as-a-service"}},[e._v("#")]),e._v(" Start your node as a service:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" secret-node\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start secret-node "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# (Now your new node is live and catching up)")]),e._v("\n")])])]),s("p",[e._v("You are now a full node. 🎉")]),e._v(" "),s("h4",{attrs:{id:"see-your-node-s-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#see-your-node-s-logs"}},[e._v("#")]),e._v(" See your node's logs:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("journalctl -u secret-node -f\n")])])]),s("p",[e._v("You can stop viewing the logs by pressing "),s("code",[e._v("ctrl + C")]),e._v(" which sends a signal to "),s("code",[e._v("journalctl")]),e._v(" to exit.")]),e._v(" "),s("h4",{attrs:{id:"point-secretcli-to-your-node-and-query-its-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#point-secretcli-to-your-node-and-query-its-status"}},[e._v("#")]),e._v(" Point "),s("code",[e._v("secretcli")]),e._v(" to your node and query its status:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli config node tcp://localhost:26657\n\nsecretcli status\n")])])]),s("p",[e._v("When the value of "),s("code",[e._v("catching_up")]),e._v(" is "),s("em",[e._v("false")]),e._v(", your node is fully sync'd with the network.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sync_info"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latest_block_hash"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"7BF95EED4EB50073F28CF833119FDB8C7DFE0562F611DF194CF4123A9C1F4640"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latest_app_hash"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"7C0C89EC4E903BAC730D9B3BB369D870371C6B7EAD0CCB5080B5F9D3782E3559"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latest_block_height"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"668538"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latest_block_time"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2020-10-31T17:50:56.800119764Z"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"earliest_block_hash"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"E7CAD87A4FDC47DFDE3D4E7C24D80D4C95517E8A6526E2D4BB4D6BC095404113"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"earliest_app_hash"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"earliest_block_height"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"earliest_block_time"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2020-09-15T14:02:31Z"')]),e._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"catching_up"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(",\n")])])]),s("h4",{attrs:{id:"get-your-node-id-with"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-your-node-id-with"}},[e._v("#")]),e._v(" Get your node ID with:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretd tendermint show-node-id\n")])])]),s("p",[e._v("And publish yourself as a node with this ID:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<your-node-id>@<your-public-ip>:26656\n")])])]),s("p",[e._v("So if someone wants to add you as a peer, have them add the above address to their "),s("code",[e._v("persistent_peers")]),e._v(" in their "),s("code",[e._v("~/.secretd/config/config.toml")]),e._v(".\nAnd if someone wants to use you from their "),s("code",[e._v("secretcli")]),e._v(" then have them run:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("secretcli config chain-id secret-2\nsecretcli config output json\nsecretcli config indent "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\nsecretcli config trust-node "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\nsecretcli config node tcp://"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-public-ip"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(":26657\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);