(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{373:function(e,a,t){"use strict";t.r(a);var s=t(42),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"how-to-join-the-secret-network-as-a-testnet-validator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-join-the-secret-network-as-a-testnet-validator"}},[e._v("#")]),e._v(" How to join the Secret Network as a testnet validator")]),e._v(" "),t("p",[e._v("This document details how to join the EnigmaChain "),t("code",[e._v("testnet")])]),e._v(" "),t("h2",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("ul",[t("li",[e._v("Ubuntu/Debian host")]),e._v(" "),t("li",[e._v("A public IP address")]),e._v(" "),t("li",[e._v("Open ports "),t("code",[e._v("TCP 26655 - 26660")])])]),e._v(" "),t("h2",{attrs:{id:"installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),t("h3",{attrs:{id:"_1-download-the-enigmachain-package-installer-debian-ubuntu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-download-the-enigmachain-package-installer-debian-ubuntu"}},[e._v("#")]),e._v(" 1. Download the "),t("a",{attrs:{href:"https://enigmaco-website.s3.amazonaws.com/enigmachain_0.0.1_amd64.deb",target:"_blank",rel:"noopener noreferrer"}},[e._v("EnigmaChain package installer"),t("OutboundLink")],1),e._v(" (Debian/Ubuntu)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wget https://enigmaco-website.s3.amazonaws.com/enigmachain_0.0.1_amd64.deb\n")])])]),t("h3",{attrs:{id:"_2-make-sure-you-don-t-have-a-previous-installation-from-testnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-make-sure-you-don-t-have-a-previous-installation-from-testnet"}},[e._v("#")]),e._v(" 2. Make sure you don't have a previous installation (from testnet):")]),e._v(" "),t("p",[t("strong",[e._v("Note:")]),e._v(" If you will be using the same key from testnet you can export it to "),t("code",[e._v("stderr")]),e._v(" with "),t("code",[e._v("secretcli keys export <key-alias>")]),e._v(" and paste it into "),t("code",[e._v("my.key")]),e._v(" and later import it with "),t("code",[e._v("secretcli keys import <key-alias> my.key")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" dpkg -r enigmachain\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf ~/.secretd ~/.secretcli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf ~/.engd ~/.engcli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" secretd"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" secretcli"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" engcli"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" engd"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n")])])]),t("h3",{attrs:{id:"_3-install-the-above-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-install-the-above-package"}},[e._v("#")]),e._v(" 3. Install the above package:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo dpkg -i enigmachain_0.0.1_amd64.deb\n")])])]),t("h3",{attrs:{id:"_4-update-the-configuration-file-that-sets-up-the-system-service-with-your-current-user-as-the-user-this-service-will-run-as"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-update-the-configuration-file-that-sets-up-the-system-service-with-your-current-user-as-the-user-this-service-will-run-as"}},[e._v("#")]),e._v(" 4. Update the configuration file that sets up the system service with your current user as the user this service will run as.")]),e._v(" "),t("p",[t("em",[e._v("Note: Even if we are running this command and the previous one with sudo, this package does not need to be run as root")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('sudo perl -i -pe "s/XXXXX/$(logname)/" /etc/systemd/system/enigma-node.service\n')])])]),t("h3",{attrs:{id:"_5-initialize-your-installation-choose-a-moniker-for-yourself-that-will-be-public-and-replace-moniker-with-your-moniker-below"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-initialize-your-installation-choose-a-moniker-for-yourself-that-will-be-public-and-replace-moniker-with-your-moniker-below"}},[e._v("#")]),e._v(" 5. Initialize your installation. Choose a "),t("strong",[e._v("moniker")]),e._v(" for yourself that will be public, and replace "),t("code",[e._v("<MONIKER>")]),e._v(" with your moniker below")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engd init <MONIKER> --chain-id enigma-testnet\n")])])]),t("h3",{attrs:{id:"_6-download-a-copy-of-the-genesis-block-file-genesis-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-download-a-copy-of-the-genesis-block-file-genesis-json"}},[e._v("#")]),e._v(" 6. Download a copy of the Genesis Block file: "),t("code",[e._v("genesis.json")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wget -O ~/.engd/config/genesis.json https://gist.githubusercontent.com/lacabra/29ea80e279a70a8b3315baa0157cfe97/raw/faa8356fc2e4b08e29abb9eeb26237cd7eb9984f/genesis.json\n")])])]),t("h3",{attrs:{id:"_7-validate-the-checksum-for-the-genesis-json-file-you-have-just-downloaded-in-the-previous-step"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-validate-the-checksum-for-the-genesis-json-file-you-have-just-downloaded-in-the-previous-step"}},[e._v("#")]),e._v(" 7. Validate the checksum for the "),t("code",[e._v("genesis.json")]),e._v(" file you have just downloaded in the previous step:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('echo "6724d80b5eaa6b2d8b181ed8021d5c68e5fea96139ce51d3a073e7ef0f13e37f $HOME/.engd/config/genesis.json" | sha256sum --check\n')])])]),t("h3",{attrs:{id:"_8-validate-that-the-genesis-json-is-a-valid-genesis-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-validate-that-the-genesis-json-is-a-valid-genesis-file"}},[e._v("#")]),e._v(" 8. Validate that the "),t("code",[e._v("genesis.json")]),e._v(" is a valid genesis file:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engd validate-genesis\n")])])]),t("h3",{attrs:{id:"_9-add-bootstrap-enigmachain-enigma-co-as-a-persistent-peer-in-your-configuration-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-add-bootstrap-enigmachain-enigma-co-as-a-persistent-peer-in-your-configuration-file"}},[e._v("#")]),e._v(" 9. Add "),t("code",[e._v("bootstrap.enigmachain.enigma.co")]),e._v(" as a persistent peer in your configuration file.")]),e._v(" "),t("p",[e._v("If you are curious, you can query the RPC endpoint on that node http://bootstrap.enigmachain.enigma.co:26657/ (please note that the RPC port "),t("code",[e._v("26657")]),e._v(" is different from the P2P port "),t("code",[e._v("26656")]),e._v(" below)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('perl -i -pe \'s/persistent_peers = ""/persistent_peers = "6795f5e88edab2e225389eb9b6d6a2f715ddbcd2\\@bootstrap.enigmachain.enigma.co:26656"/\' ~/.engd/config/config.toml\n')])])]),t("h3",{attrs:{id:"_10-enable-enigma-node-as-a-system-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-enable-enigma-node-as-a-system-service"}},[e._v("#")]),e._v(" 10. Enable "),t("code",[e._v("enigma-node")]),e._v(" as a system service:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl enable enigma-node\n")])])]),t("h3",{attrs:{id:"_11-start-enigma-node-as-a-system-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-start-enigma-node-as-a-system-service"}},[e._v("#")]),e._v(" 11. Start "),t("code",[e._v("enigma-node")]),e._v(" as a system service:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl start enigma-node\n")])])]),t("h3",{attrs:{id:"_12-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c"}},[e._v("#")]),e._v(" 12. If everything above worked correctly, the following command will show your node streaming blocks (this is for debugging purposes only, kill this command anytime with Ctrl-C):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("journalctl -f -u enigma-node\n-- Logs begin at Mon 2020-02-10 16:41:59 UTC. --\nFeb 10 21:18:34 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:34.307] Executed block                               module=state height=2629 validTxs=0 invalidTxs=0\nFeb 10 21:18:34 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:34.317] Committed state                              module=state height=2629 txs=0 appHash=34BC6CF2A11504A43607D8EBB2785ED5B20EAB4221B256CA1D32837EBC4B53C5\nFeb 10 21:18:39 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:39.382] Executed block                               module=state height=2630 validTxs=0 invalidTxs=0\nFeb 10 21:18:39 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:39.392] Committed state                              module=state height=2630 txs=0 appHash=17114C79DFAAB82BB2A2B67B63850864A81A048DBADC94291EB626F584A798EA\nFeb 10 21:18:44 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:44.458] Executed block                               module=state height=2631 validTxs=0 invalidTxs=0\nFeb 10 21:18:44 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:44.468] Committed state                              module=state height=2631 txs=0 appHash=D2472874A63CE166615E5E2FDFB4006ADBAD5B49C57C6B0309F7933CACC24B10\nFeb 10 21:18:49 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:49.532] Executed block                               module=state height=2632 validTxs=0 invalidTxs=0\nFeb 10 21:18:49 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:49.543] Committed state                              module=state height=2632 txs=0 appHash=A14A58E80FB24115DD41E6D787667F2FBBE003895D1B79334A240F52FCBD97F2\nFeb 10 21:18:54 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:54.613] Executed block                               module=state height=2633 validTxs=0 invalidTxs=0\nFeb 10 21:18:54 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:54.623] Committed state                              module=state height=2633 txs=0 appHash=C00112BB0D9E6812CEB4EFF07D2205D86FCF1FD68DFAB37829A64F68B5E3B192\nFeb 10 21:18:59 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:59.685] Executed block                               module=state height=2634 validTxs=0 invalidTxs=0\nFeb 10 21:18:59 ip-172-31-41-58 engd[8814]: I[2020-02-10|21:18:59.695] Committed state                              module=state height=2634 txs=0 appHash=1F371F3B26B37A2173563CC928833162DDB753D00EC2BCE5EDC088F921AD0D80\n^C\n")])])]),t("h3",{attrs:{id:"_13-add-the-following-configuration-settings-some-of-these-avoid-having-to-type-some-flags-all-the-time"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-add-the-following-configuration-settings-some-of-these-avoid-having-to-type-some-flags-all-the-time"}},[e._v("#")]),e._v(" 13. Add the following configuration settings (some of these avoid having to type some flags all the time):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engcli config chain-id enigma-testnet\nengcli config output json\nengcli config indent true\nengcli config trust-node true # true if you trust the full-node you are connecting to, false otherwise\n")])])]),t("h3",{attrs:{id:"_14-generate-a-new-key-pair-for-yourself-change-key-alias-with-any-word-of-your-choice-this-is-just-for-your-internal-personal-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-generate-a-new-key-pair-for-yourself-change-key-alias-with-any-word-of-your-choice-this-is-just-for-your-internal-personal-reference"}},[e._v("#")]),e._v(" 14. Generate a new key pair for yourself (change "),t("code",[e._v("<key-alias>")]),e._v(" with any word of your choice, this is just for your internal/personal reference):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engcli keys add <key-alias>\n")])])]),t("p",[t("strong",[e._v("⚠️Note⚠️: Please backup the mnemonics!")])]),e._v(" "),t("h3",{attrs:{id:"_15-output-your-node-address"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-output-your-node-address"}},[e._v("#")]),e._v(" 15. Output your node address:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engcli keys show <key-alias> -a\n")])])]),t("h3",{attrs:{id:"_16-request-tokens-to-be-sent-to-the-address-displayed-above"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-request-tokens-to-be-sent-to-the-address-displayed-above"}},[e._v("#")]),e._v(" 16. Request tokens to be sent to the address displayed above.")]),e._v(" "),t("h3",{attrs:{id:"_17-check-that-you-have-the-requested-tokens"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-check-that-you-have-the-requested-tokens"}},[e._v("#")]),e._v(" 17. Check that you have the requested tokens:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engcli q account $(engcli keys show -a <key_alias>)\n")])])]),t("p",[e._v("If you get the following message, it means that you have not tokens yet:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("ERROR: unknown address: account enigmaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx does not exist\n")])])]),t("h3",{attrs:{id:"_18-join-the-network-as-a-new-validator-replace-moniker-with-your-own-from-step-4-above-and-adjust-the-amount-you-want-to-stake"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-join-the-network-as-a-new-validator-replace-moniker-with-your-own-from-step-4-above-and-adjust-the-amount-you-want-to-stake"}},[e._v("#")]),e._v(" 18. Join the network as a new validator: replace "),t("code",[e._v("<MONIKER>")]),e._v(" with your own from step 4 above, and adjust the amount you want to stake")]),e._v(" "),t("p",[e._v("(remember 1 TSCRT = 1,000,000 uTSCRT, and so the command below stakes 100k TSCRT).")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('engcli tx staking create-validator \\\n  --amount=100000000000utscrt \\\n  --pubkey=$(engd tendermint show-validator) \\\n  --chain-id=enigma-testnet \\\n  --commission-rate="0.10" \\\n  --commission-max-rate="0.20" \\\n  --commission-max-change-rate="0.01" \\\n  --min-self-delegation="1" \\\n  --gas=200000 \\\n  --gas-prices="0.025utscrt" \\\n  --moniker=<MONIKER> \\\n  --from=<key-alias>\n')])])]),t("h3",{attrs:{id:"_19-check-that-you-have-been-added-as-a-validator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-check-that-you-have-been-added-as-a-validator"}},[e._v("#")]),e._v(" 19. Check that you have been added as a validator:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("engcli q staking validators\n")])])]),t("p",[e._v("If the above is too verbose, just run: "),t("code",[e._v("engcli q staking validators | grep moniker")]),e._v(". You should see your moniker listed.")]),e._v(" "),t("h2",{attrs:{id:"staking-more-tokens"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#staking-more-tokens"}},[e._v("#")]),e._v(" Staking more tokens")]),e._v(" "),t("p",[e._v("(remember 1 TSCRT = 1,000,000 uTSCRT)")]),e._v(" "),t("p",[e._v("In order to stake more tokens beyond those in the initial transaction, run:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("engcli tx staking delegate $(engcli keys show <key-alias> --bech=val -a) 1utscrt --from <key-alias>\n")])])]),t("h2",{attrs:{id:"seeing-your-rewards-from-being-a-validator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seeing-your-rewards-from-being-a-validator"}},[e._v("#")]),e._v(" Seeing your rewards from being a validator")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("engcli q distribution rewards "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("engcli keys show -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),t("h2",{attrs:{id:"seeing-your-commissions-from-your-delegators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seeing-your-commissions-from-your-delegators"}},[e._v("#")]),e._v(" Seeing your commissions from your delegators")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("engcli q distribution commission "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("engcli keys show -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --bech"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("val"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),t("h2",{attrs:{id:"withdrawing-rewards"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#withdrawing-rewards"}},[e._v("#")]),e._v(" Withdrawing rewards")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("engcli tx distribution withdraw-rewards "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("engcli keys show --bech"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("val -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" --from "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),t("h2",{attrs:{id:"withdrawing-rewards-commissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#withdrawing-rewards-commissions"}},[e._v("#")]),e._v(" Withdrawing rewards+commissions")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("engcli tx distribution withdraw-rewards "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("engcli keys show --bech"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("val -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" --from "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("key-alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --commission\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);