(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{426:function(e,t,a){"use strict";a.r(t);var s=a(42),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"verify-your-sgx-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-your-sgx-setup"}},[e._v("#")]),e._v(" Verify your SGX setup")]),e._v(" "),a("h1",{attrs:{id:"background"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),a("p",[e._v("To make sure the entire network runs on SGX nodes we use a process called "),a("em",[e._v("registration")]),e._v(". This process, performed by each node runner, involves authenticating the local enclave both with Intel Attestation Services and on-chain.")]),e._v(" "),a("p",[e._v("This process not only verifies that the local node is running a genuine enclave, but that it is patched, and not vulnerable to any known exploits. This means that you may be running SGX-enabled hardware, but may be missing microcode, or firmware which affect SGX-security.")]),e._v(" "),a("p",[e._v("For this reason it is recommended to check ahead of time the result of the attestation process, which can tell you if an update is required.")]),e._v(" "),a("p",[a("strong",[e._v("Note:")]),e._v(" for the incentivized testnet we are going to run with more relaxed requirements than mainnet - be aware that your incentivized testnet setup may not work on mainnet if you do not verify it")]),e._v(" "),a("h2",{attrs:{id:"instructions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instructions"}},[e._v("#")]),e._v(" Instructions")]),e._v(" "),a("p",[e._v("These instructions refer to an installation using:")]),e._v(" "),a("ul",[a("li",[e._v("Ubuntu 18.04 or 20.04")]),e._v(" "),a("li",[e._v("SGX driver "),a("a",{attrs:{href:"https://download.01.org/intel-sgx/sgx-linux/2.9.1/distro/ubuntu18.04-server/sgx_linux_x64_driver_2.6.0_602374c.binn",title:"sgx_linux_x64_driver_2.6.0_602374c.bin",target:"_blank",rel:"noopener noreferrer"}},[e._v("sgx_linux_x64_driver_2.6.0_602374c.bin"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("Intel SGX PSW 2.9.101.2")])]),e._v(" "),a("p",[e._v("See SGX installation instructions "),a("RouterLink",{attrs:{to:"/validators-and-full-nodes/setup-sgx.html"}},[e._v("here")])],1),e._v(" "),a("p",[e._v("Other driver/OS combinations are not guaranteed to work with these instructions. Let us know on "),a("code",[e._v("chat.scrt.network")]),e._v(" if you intend to run on a different setup.")]),e._v(" "),a("h3",{attrs:{id:"_1-download-the-test-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-download-the-test-package"}},[e._v("#")]),e._v(" 1. Download the test package")]),e._v(" "),a("p",[e._v("wget https://github.com/chainofsecrets/SecretNetwork/releases/download/v1.0.0/secretnetwork_1.0.0_amd64.deb")]),e._v(" "),a("h3",{attrs:{id:"_2-unpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-unpack"}},[e._v("#")]),e._v(" 2. Unpack")]),e._v(" "),a("h4",{attrs:{id:"this-will-install-secretd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-will-install-secretd"}},[e._v("#")]),e._v(" This will install "),a("code",[e._v("secretd")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" dpkg -i secretnetwork_1.0.0_amd64.deb\n")])])]),a("h3",{attrs:{id:"_3-initialize-the-enclave"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-initialize-the-enclave"}},[e._v("#")]),e._v(" 3. Initialize the enclave")]),e._v(" "),a("p",[e._v("Create the "),a("code",[e._v(".sgx_secrets")]),e._v(" directory if it doesn't already exist")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" .sgx_secrets\n")])])]),a("p",[e._v("Then initialize the enclave")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SCRT_ENCLAVE_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/lib secretd init-enclave\n")])])]),a("p",[e._v("(or "),a("code",[e._v('SCRT_ENCLAVE_DIR=/usr/lib secretd init-enclave | grep -Po \'isvEnclaveQuoteStatus":".+?"\'')]),e._v(")")]),e._v(" "),a("p",[e._v("This step, if successful, will create an output similar to this -")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('INFO  [wasmi_runtime_enclave::registration::attestation] Attestation report: {"id":"183845695958032083367610248637243990718","timestamp":"2020-07-12T09:43:12.297820","version":4,"advisoryURL":"https://security-center.intel.com","advisoryIDs":["INTEL-SA-00334"],"isvEnclaveQuoteStatus":"SW_HARDENING_NEEDED","isvEnclaveQuoteBody":"AgAAAMYLAAALAAoAAAAAABf93MlHcUSizYTifNzpi+QD9Lqdmd+k62/B9e4nOc4sDw8DBf+ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAHAAAAAAAAAO40oSBNM9hG2mHlwrSwAbMCmy87uJSAiGpez88uqJlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACD1xnnferKFHD2uvYqTXdDA8iZ22kCD5xw7h38CMfOngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv56xwUqy2HPiT/uxTSwg1LQmFPJa2sD0Q2YwuzlJuLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"}\n')])])]),a("p",[e._v("(or "),a("code",[e._v('isvEnclaveQuoteStatus":"SW_HARDENING_NEEDED"')]),e._v(")")]),e._v(" "),a("p",[e._v("Where the important fields are "),a("strong",[e._v("isvEnclaveQuoteStatus")]),e._v(" and "),a("strong",[e._v("advisoryIDs")]),e._v(". This is are fields that mark the trust level of our platform. The acceptable values for the "),a("code",[e._v("isvEnclaveQuoteStatus")]),e._v(" field are:")]),e._v(" "),a("ul",[a("li",[e._v("OK")]),e._v(" "),a("li",[e._v("SW_HARDENING_NEEDED")])]),e._v(" "),a("p",[e._v("With the following value accepted for "),a("strong",[e._v("testnet only")]),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("GROUP_OUT_OF_DATE")])]),e._v(" "),a("p",[e._v("For the status "),a("code",[e._v("CONFIGURATION_AND_SW_HARDENING_NEEDED")]),e._v(" we perform a deeper inspection of the exact vulnerabilities that remain. The acceptable values "),a("strong",[e._v("for mainnet")]),e._v(" are:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('"INTEL-SA-00334"')])]),e._v(" "),a("li",[a("code",[e._v('"INTEL-SA-00219"')])])]),e._v(" "),a("p",[e._v("Consult with the "),a("a",{attrs:{href:"https://api.trustedservices.intel.com/documents/sgx-attestation-api-spec.pdf#page=21",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel API"),a("OutboundLink")],1),e._v(" for more on these values.")]),e._v(" "),a("p",[e._v("If you do not see such an output, look for a file called "),a("code",[e._v("attestation_cert.der")]),e._v(" which should have been created in your "),a("code",[e._v("$HOME")]),e._v(" directory. You can then use the command "),a("code",[e._v("secretd parse <path/to/attestation_cert.der>")]),e._v(" to check the result a successful result should be a 64 byte hex string (e.g. "),a("code",[e._v("0x9efe0dc689447514d6514c05d1161cea15c461c62e6d72a2efabcc6b85ed953b")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"_4-what-to-do-if-this-didn-t-work"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-what-to-do-if-this-didn-t-work"}},[e._v("#")]),e._v(" 4. What to do if this didn't work?")]),e._v(" "),a("ol",[a("li",[e._v("Running "),a("code",[e._v("secretd init-enclave")]),e._v(" should have created a file called "),a("code",[e._v("attestation_cert.der")]),e._v(". This file contains the attestation report from above.")]),e._v(" "),a("li",[e._v("Contact us on the proper channels on "),a("code",[e._v("chat.scrt.network")])]),e._v(" "),a("li",[e._v("The details we will need to investigate will include:\n"),a("ul",[a("li",[e._v("Hardware specs")]),e._v(" "),a("li",[e._v("SGX PSW/driver versions")]),e._v(" "),a("li",[e._v("BIOS versions")]),e._v(" "),a("li",[e._v("The file "),a("code",[e._v("attestation_cert.der")])])])])]),e._v(" "),a("h3",{attrs:{id:"_5-troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-troubleshooting"}},[e._v("#")]),e._v(" 5. Troubleshooting")]),e._v(" "),a("h4",{attrs:{id:"output-is"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-is"}},[e._v("#")]),e._v(" Output is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("secretd init-enclave\n2020-07-12 13:21:31,864 INFO  [go_cosmwasm] Hello from right before key_gen\n2020-07-12 13:21:31,864 INFO  [cosmwasm_sgx_vm::seed] Hello from just before initializing - untrusted_key_gen\n2020-07-12 13:21:31,864 ERROR [go_cosmwasm] Error :(\nERROR: failed to initialize enclave: Error calling the VM: SGX_ERROR_ENCLAVE_FILE_ACCESS\n")])])]),a("p",[e._v("Make sure you have the environment variable "),a("code",[e._v("SCRT_ENCLAVE_DIR=/usr/lib")]),e._v(" set before you run "),a("code",[e._v("secretd")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"output-is-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-is-2"}},[e._v("#")]),e._v(" Output is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("secretd init-enclave\n2020-07-12 13:37:26,549 INFO  [go_cosmwasm] Hello from right before key_gen\n2020-07-12 13:37:26,549 INFO  [cosmwasm_sgx_vm::seed] Hello from just before initializing - untrusted_key_gen\n2020-07-12 13:37:26,689 INFO  [cosmwasm_sgx_vm::seed] Hello from just after initializing - untrusted_key_gen\nDEBUG  [wasmi_runtime_enclave::crypto::key_manager] Seed not initialized! Cannot derive enclave keys\nERROR  [wasmi_runtime_enclave::crypto::key_manager] Error sealing registration key\nERROR  [wasmi_runtime_enclave::registration::offchain] Failed to create registration key\n2020-07-12 13:37:26,690 ERROR [go_cosmwasm] Error :(\nERROR: failed to initialize enclave: Error calling the VM: SGX_ERROR_UNEXPECTED\n")])])]),a("p",[e._v("Make sure the directory "),a("code",[e._v("~/.sgx_secrets/")]),e._v(" is created. If that still doesn't work, try to create "),a("code",[e._v("/root/.sgx_secrets")])]),e._v(" "),a("h4",{attrs:{id:"output-is-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-is-3"}},[e._v("#")]),e._v(" Output is:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("secretd init-enclave\n2020-07-12 13:46:34,463 INFO  [go_cosmwasm] Hello from right before key_gen\n2020-07-12 13:46:34,463 INFO  [cosmwasm_sgx_vm::seed] Hello from just before initializing - untrusted_key_gen\n2020-07-12 13:46:34,609 INFO  [cosmwasm_sgx_vm::seed] Hello from just after initializing - untrusted_key_gen\nDEBUG  [wasmi_runtime_enclave::crypto::key_manager] Seed not initialized! Cannot derive enclave keys\nINFO  [wasmi_runtime_enclave::registration::offchain] ecall_key_gen key pk: [216, 167, 170, 152, 151, 228, 78, 162, 141, 2, 6, 132, 35, 245, 214, 206, 128, 29, 141, 28, 42, 185, 186, 181, 122, 84, 172, 21, 78, 17, 106, 85]\n2020-07-12 13:46:34,617 INFO  [cosmwasm_sgx_vm::attestation] Hello from just before initializing - create_attestation_report_u\n2020-07-12 13:46:34,617 INFO  [cosmwasm_sgx_vm::attestation] Hello from just after initializing - create_attestation_report_u\n2020-07-12 13:46:34,617 INFO  [cosmwasm_sgx_vm::attestation] Entered produce report\nDEBUG  [wasmi_runtime_enclave::crypto::key_manager] Seed not initialized! Cannot derive enclave keys\nINFO  [wasmi_runtime_enclave::registration::offchain] ecall_get_attestation_report key pk: [216, 167, 170, 152, 151, 228, 78, 162, 141, 2, 6, 132, 35, 245, 214, 206, 128, 29, 141, 28, 42, 185, 186, 181, 122, 84, 172, 21, 78, 17, 106, 85]\n2020-07-12 13:46:34,618 INFO  [cosmwasm_sgx_vm::attestation] Entering ocall_sgx_init_quote\nDEBUG  [wasmi_runtime_enclave::registration::attestation] EPID group = [0, 0, 0, 0]\nERROR  [wasmi_runtime_enclave::registration::attestation] Error in create_attestation_report: SGX_ERROR_SERVICE_UNAVAILABLE\nERROR  [wasmi_runtime_enclave::registration::offchain] Error in create_attestation_certificate: SGX_ERROR_SERVICE_UNAVAILABLE\nERROR: failed to create attestation report: Error calling the VM: SGX_ERROR_SERVICE_UNAVAILABLE\n")])])]),a("p",[e._v("Make sure the "),a("code",[e._v("aesmd-service")]),e._v(" is running "),a("code",[e._v("systemctl status aesmd.service")])]),e._v(" "),a("h4",{attrs:{id:"i-m-seeing-configuration-and-sw-hardening-needed-in-the-isvenclavequotestatus-field-but-with-more-advisories-than-what-is-allowed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-m-seeing-configuration-and-sw-hardening-needed-in-the-isvenclavequotestatus-field-but-with-more-advisories-than-what-is-allowed"}},[e._v("#")]),e._v(" I'm seeing "),a("code",[e._v("CONFIGURATION_AND_SW_HARDENING_NEEDED")]),e._v(" in the "),a("code",[e._v("isvEnclaveQuoteStatus")]),e._v(" field, but with more advisories than what is allowed")]),e._v(" "),a("p",[e._v("This could mean a number of different things related to the configuration of the machine. Most common are:")]),e._v(" "),a("ul",[a("li",[e._v('["INTEL-SA-00161", "INTEL-SA-00233"] - Hyper-threading must be disabled in the BIOS')]),e._v(" "),a("li",[e._v('["INTEL-SA-00289"] - Overclocking/undervolting must be disabled by the BIOS')]),e._v(" "),a("li",[e._v('["INTEL-SA-00219"] - Integrated graphics should be disabled in the BIOS - we recommend performing this step if you can, though it isn\'t required')])]),e._v(" "),a("h4",{attrs:{id:"i-m-seeing-sgx-error-device-busy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-m-seeing-sgx-error-device-busy"}},[e._v("#")]),e._v(" I'm seeing "),a("code",[e._v("SGX_ERROR_DEVICE_BUSY")])]),e._v(" "),a("p",[e._v("Most likely you tried reinstalling the driver and rerunning the enclave - restarting should solve the problem")])])}),[],!1,null,null,null);t.default=i.exports}}]);