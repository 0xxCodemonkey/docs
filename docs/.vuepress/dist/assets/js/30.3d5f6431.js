(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{380:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"secret-contract-dev-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#secret-contract-dev-guide"}},[t._v("#")]),t._v(" Secret Contract Dev Guide")]),t._v(" "),a("p",[t._v("Secret Contracts are the first implementation of general purpose privacy preserving computations on public blockchain. While similar to Ethereum smart contracts in design, Secret Contracts work with encrypted data (inputs, encrypted outputs and encrypted state). These privacy guarantees are made possible by a decentralized network of validators, who run Secret Contracts execution inside Trusted Execution Environments (TEEs).")]),t._v(" "),a("p",[t._v("Secret Contracts are Rust based smart contracts that compile to WebAssembly. Secret Contracts, which are based on "),a("a",{attrs:{href:"https://www.cosmwasm.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("CosmWasm"),a("OutboundLink")],1),t._v(", introduce the "),a("em",[t._v("compute")]),t._v(" module that runs inside the TEE to enable secure data processing.")]),t._v(" "),a("p",[t._v("Next we'll walkthrough steps to:")]),t._v(" "),a("ul",[a("li",[t._v("install Rust")]),t._v(" "),a("li",[t._v("install the Rust dependencies")]),t._v(" "),a("li",[t._v("create your first project")])]),t._v(" "),a("p",[t._v("The Rust dependencies include the Rust compiler, cargo ("),a("em",[t._v("package manager")]),t._v("), toolchain and a package to generate projects. You can check out the Rust book, rustlings course, examples and more "),a("a",{attrs:{href:"https://www.rust-lang.org/learn",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("ol",[a("li",[t._v("Install Rust")])]),t._v(" "),a("p",[t._v("More information about installing Rust can be found here: https://www.rust-lang.org/tools/install.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource $HOME/.cargo/env\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Add rustup target wasm32 for both stable and nightly")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rustup default stable\nrustup target list --installed\nrustup target add wasm32-unknown-unknown\n\nrustup install nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("If using linux, install the standard build tools:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("apt install build-essential\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Run cargo install cargo-generate")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://doc.rust-lang.org/cargo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cargo generate"),a("OutboundLink")],1),t._v(" is the tool you'll use to create a smart contract project.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cargo install cargo-generate --features vendored-openssl\n")])])]),a("h3",{attrs:{id:"create-initial-smart-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-initial-smart-contract"}},[t._v("#")]),t._v(" Create Initial Smart Contract")]),t._v(" "),a("p",[t._v("To create the smart contract you'll:")]),t._v(" "),a("ul",[a("li",[t._v("generate the initial project")]),t._v(" "),a("li",[t._v("compile the smart contract")]),t._v(" "),a("li",[t._v("run unit tests")]),t._v(" "),a("li",[t._v("optimize the wasm contract bytecode to prepare for deployment")]),t._v(" "),a("li",[t._v("deploy the smart contract to your local SecretNetwork")]),t._v(" "),a("li",[t._v("instantiate it with contract parameters")])]),t._v(" "),a("p",[t._v("Generate the smart contract project")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cargo generate --git https://github.com/enigmampc/secret-template --name mysimplecounter\n")])])]),a("p",[t._v("The git project above is a cosmwasm smart contract template that implements a simple counter. The contract is created with a parameter for the initial count and allows subsequent incrementing.")]),t._v(" "),a("p",[t._v("Change directory to the project you created and view the structure and files that were created.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd mysimplecounter\n")])])]),a("p",[t._v("The generate creates a directory with the project name and has this structure:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Cargo.lock\tDeveloping.md\tLICENSE\t\tPublishing.md\texamples\tschema\t\ttests\nCargo.toml\tImporting.md\tNOTICE\t\tREADME.md\trustfmt.toml\tsrc\n")])])]),a("h3",{attrs:{id:"compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile"}},[t._v("#")]),t._v(" Compile")]),t._v(" "),a("p",[t._v("Use the following command to compile the smart contract which produces the wasm contract file.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cargo wasm\n")])])]),a("h3",{attrs:{id:"unit-tests-nb-tests-in-this-template-currently-fail-unless-you-have-sgx-enabled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unit-tests-nb-tests-in-this-template-currently-fail-unless-you-have-sgx-enabled"}},[t._v("#")]),t._v(" Unit Tests (NB Tests in this template currently fail unless you have SGX enabled)")]),t._v(" "),a("p",[t._v("Run unit tests")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("RUST_BACKTRACE=1 cargo unit-test\n")])])]),a("h3",{attrs:{id:"integration-tests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integration-tests"}},[t._v("#")]),t._v(" Integration Tests")]),t._v(" "),a("p",[t._v("The integration tests are under the "),a("code",[t._v("tests/")]),t._v(" directory and run as:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cargo integration-test\n")])])]),a("h3",{attrs:{id:"generate-msg-schemas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-msg-schemas"}},[t._v("#")]),t._v(" Generate Msg Schemas")]),t._v(" "),a("p",[t._v("We can also generate JSON Schemas that serve as a guide for anyone trying to use the contract, to specify which arguments they need.")]),t._v(" "),a("p",[t._v("Auto-generate msg schemas (when changed):")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cargo schema\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);