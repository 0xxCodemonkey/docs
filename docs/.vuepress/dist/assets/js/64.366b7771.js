(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{420:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"how-to-join-secret-network-as-a-full-node-on-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-join-secret-network-as-a-full-node-on-testnet"}},[e._v("#")]),e._v(" How To Join Secret Network as a Full Node on Testnet")]),e._v(" "),a("p",[e._v("This document details how to join the Secret Network "),a("code",[e._v("testnet")]),e._v(" as a full node. Once your full node is running, you can turn it into a validator in the optional last step.")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("Ubuntu/Debian host (with ZFS or LVM to be able to add more storage easily)")]),e._v(" "),a("li",[e._v("A public IP address")]),e._v(" "),a("li",[e._v("Open ports "),a("code",[e._v("TCP 26656 & 26657")]),e._v(" "),a("em",[e._v("Note: If you're behind a router or firewall then you'll need to port forward on the network device.")])]),e._v(" "),a("li",[e._v("Reading https://docs.tendermint.com/master/tendermint-core/running-in-production.html")]),e._v(" "),a("li",[e._v("RPC address of an already active node. You can use "),a("code",[e._v("bootstrap.secrettestnet.io:26657")]),e._v(", or any other node that exposes RPC services.")])]),e._v(" "),a("h3",{attrs:{id:"minimum-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimum-requirements"}},[e._v("#")]),e._v(" Minimum requirements")]),e._v(" "),a("ul",[a("li",[e._v("1GB RAM")]),e._v(" "),a("li",[e._v("100GB HDD")]),e._v(" "),a("li",[e._v("1 dedicated core of any Intel Skylake processor (Intel® 6th generation) or better")])]),e._v(" "),a("h3",{attrs:{id:"recommended-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recommended-requirements"}},[e._v("#")]),e._v(" Recommended requirements")]),e._v(" "),a("ul",[a("li",[e._v("2GB RAM")]),e._v(" "),a("li",[e._v("256GB SSD")]),e._v(" "),a("li",[e._v("2 dedicated cores of any Intel Skylake processor (Intel® 6th generation) or better")]),e._v(" "),a("li",[e._v("Motherboard with support for SGX in the BIOS")])]),e._v(" "),a("p",[e._v("Refer to https://ark.intel.com/content/www/us/en/ark.html#@Processors if unsure if your processor supports SGX")]),e._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("h3",{attrs:{id:"_0-step-up-sgx-on-your-local-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-step-up-sgx-on-your-local-machine"}},[e._v("#")]),e._v(" 0. Step up SGX on your local machine")]),e._v(" "),a("p",[e._v("See instructions for "),a("RouterLink",{attrs:{to:"/testnet/setup-sgx-testnet.html"}},[e._v("setup")]),e._v(" and "),a("RouterLink",{attrs:{to:"/testnet/verify-sgx.html"}},[e._v("verification")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"_1-download-the-secret-network-package-installer-for-debian-ubuntu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-download-the-secret-network-package-installer-for-debian-ubuntu"}},[e._v("#")]),e._v(" 1. Download the Secret Network package installer for Debian/Ubuntu:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/chainofsecrets/SecretNetwork/releases/download/v1.0.0/secretnetwork_1.0.0_amd64.deb\n")])])]),a("p",[e._v("("),a("RouterLink",{attrs:{to:"/verify-releases.html"}},[e._v("How to verify releases")]),e._v(")")],1),e._v(" "),a("h3",{attrs:{id:"_2-install-the-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-install-the-package"}},[e._v("#")]),e._v(" 2. Install the package:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" dpkg -i secretnetwork_1.0.0_amd64.deb\n")])])]),a("h3",{attrs:{id:"_3-initialize-your-installation-of-the-secret-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-initialize-your-installation-of-the-secret-network"}},[e._v("#")]),e._v(" 3. Initialize your installation of the Secret Network.")]),e._v(" "),a("p",[e._v("Choose a "),a("strong",[e._v("moniker")]),e._v(" for yourself, and replace "),a("code",[e._v("<MONIKER>")]),e._v(" with your moniker below.\nThis moniker will serve as your public nickname in the network.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretd init "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("MONIKER"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --chain-id holodeck-2\n")])])]),a("h3",{attrs:{id:"_4-download-a-copy-of-the-genesis-block-file-genesis-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-download-a-copy-of-the-genesis-block-file-genesis-json"}},[e._v("#")]),e._v(" 4. Download a copy of the Genesis Block file: "),a("code",[e._v("genesis.json")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" -O ~/.secretd/config/genesis.json "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/chainofsecrets/SecretNetwork/releases/download/v1.0.0/holodeck-2-genesis.json"')]),e._v("\n")])])]),a("h3",{attrs:{id:"_5-validate-the-checksum-for-the-genesis-json-file-you-have-just-downloaded-in-the-previous-step"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-validate-the-checksum-for-the-genesis-json-file-you-have-just-downloaded-in-the-previous-step"}},[e._v("#")]),e._v(" 5. Validate the checksum for the "),a("code",[e._v("genesis.json")]),e._v(" file you have just downloaded in the previous step:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"e45d6aa9825bae70c277509c8346122e265d64cb4211c23def4ae8f6bf3da2f1 '),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v('/.secretd/config/genesis.json"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" sha256sum --check\n")])])]),a("h3",{attrs:{id:"_6-validate-that-the-genesis-json-is-a-valid-genesis-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-validate-that-the-genesis-json-is-a-valid-genesis-file"}},[e._v("#")]),e._v(" 6. Validate that the "),a("code",[e._v("genesis.json")]),e._v(" is a valid genesis file:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretd validate-genesis\n")])])]),a("h3",{attrs:{id:"_7-the-rest-of-the-commands-should-be-ran-from-the-home-folder-home-your-username"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-the-rest-of-the-commands-should-be-ran-from-the-home-folder-home-your-username"}},[e._v("#")]),e._v(" 7. The rest of the commands should be ran from the home folder ("),a("code",[e._v("/home/<your_username>")]),e._v(")")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ~\n")])])]),a("h3",{attrs:{id:"_8-initialize-secret-enclave"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-initialize-secret-enclave"}},[e._v("#")]),e._v(" 8. Initialize secret enclave")]),e._v(" "),a("p",[e._v("Make sure the directory "),a("code",[e._v("~/.sgx_secrets")]),e._v(" exists:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p ~/.sgx_secrets\n")])])]),a("p",[e._v("Make sure SGX is enabled and running or this step might fail.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SCRT_ENCLAVE_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/lib\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretd init-enclave \n")])])]),a("h3",{attrs:{id:"_9-check-that-initialization-was-successful"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-check-that-initialization-was-successful"}},[e._v("#")]),e._v(" 9. Check that initialization was successful")]),e._v(" "),a("p",[e._v("Attestation certificate should have been created by the previous step")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -lh ./attestation_cert.der\n")])])]),a("h3",{attrs:{id:"_10-check-your-certificate-is-valid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-check-your-certificate-is-valid"}},[e._v("#")]),e._v(" 10. Check your certificate is valid")]),e._v(" "),a("p",[e._v("Should print your 64 character registration key if it was successful.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PUBLIC_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("secretd parse attestation_cert.der "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("2")]),e._v(">")]),e._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cut")]),e._v(" -c "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PUBLIC_KEY")]),e._v("\n")])])]),a("h3",{attrs:{id:"_11-config-secretcli-generate-a-key-and-get-some-test-scrt-from-the-faucet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-config-secretcli-generate-a-key-and-get-some-test-scrt-from-the-faucet"}},[e._v("#")]),e._v(" 11. Config "),a("code",[e._v("secretcli")]),e._v(", generate a key and get some test-SCRT from the faucet")]),e._v(" "),a("p",[e._v("The steps using "),a("code",[e._v("secretcli")]),e._v(" can be run on any machine, they don't need to be on the full node itself. We'll refer to the machine where you are using "),a("code",[e._v("secretcli")]),e._v(' as the "CLI machine" below.')]),e._v(" "),a("p",[e._v("To run the steps with "),a("code",[e._v("secretcli")]),e._v(" on another machine, "),a("RouterLink",{attrs:{to:"/testnet/install_cli.html"}},[e._v("set up the CLI")]),e._v(" there.")],1),e._v(" "),a("p",[e._v("Configure "),a("code",[e._v("secretcli")]),e._v(". Initially you'll be using the bootstrap node, as you'll need to connect to a running node and your own node is not running yet.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli config chain-id holodeck-2\nsecretcli config node tcp://bootstrap.secrettestnet.io:26657\nsecretcli config output json\nsecretcli config indent "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\nsecretcli config trust-node "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),a("p",[e._v("Set up a key. Make sure you backup the mnemonic and the keyring password.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli keys "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$INSERT_YOUR_KEY_NAME")]),e._v("\n")])])]),a("p",[e._v("This will output your address, a 45 character-string starting with "),a("code",[e._v("secret1...")]),e._v(". Copy/paste it to get some test-SCRT from "),a("a",{attrs:{href:"https://faucet.secrettestnet.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("the faucet"),a("OutboundLink")],1),e._v(". Continue when you have confirmed your account has some test-SCRT in it.")]),e._v(" "),a("h3",{attrs:{id:"_12-register-your-node-on-chain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-register-your-node-on-chain"}},[e._v("#")]),e._v(" 12. Register your node on-chain")]),e._v(" "),a("p",[e._v("Run this step on the CLI machine. If you're using different CLI machine than the full node, copy "),a("code",[e._v("attestation_cert.der")]),e._v(" from the full node to the CLI machine.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli tx register auth "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path/to/attestation_cert.der"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --from "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$INSERT_YOUR_KEY_NAME")]),e._v(" --gas "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("250000")]),e._v("\n")])])]),a("h3",{attrs:{id:"_13-pull-check-your-node-s-encrypted-seed-from-the-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-pull-check-your-node-s-encrypted-seed-from-the-network"}},[e._v("#")]),e._v(" 13. Pull & check your node's encrypted seed from the network")]),e._v(" "),a("p",[e._v("Run this step on the CLI machine.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SEED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("secretcli query register seed "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PUBLIC_KEY")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cut")]),e._v(" -c "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SEED")]),e._v("\n")])])]),a("h3",{attrs:{id:"_14-get-additional-network-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-get-additional-network-parameters"}},[e._v("#")]),e._v(" 14. Get additional network parameters")]),e._v(" "),a("p",[e._v("Run this step on the CLI machine.")]),e._v(" "),a("p",[e._v("These are necessary to configure the node before it starts.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli query register secret-network-params\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -lh ./io-master-cert.der ./node-master-cert.der\n")])])]),a("p",[e._v("If you're using different CLI machine than the validator node, copy "),a("code",[e._v("node-master-cert.der")]),e._v(" from the CLI machine to the validator node.")]),e._v(" "),a("h3",{attrs:{id:"_15-configure-your-secret-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-configure-your-secret-node"}},[e._v("#")]),e._v(" 15. Configure your secret node")]),e._v(" "),a("p",[e._v("From here on, run commands on the full node again.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p ~/.secretd/.node\nsecretd configure-secret node-master-cert.der "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SEED")]),e._v('"')]),e._v("\n")])])]),a("h3",{attrs:{id:"_16-add-persistent-peers-to-your-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-add-persistent-peers-to-your-configuration-file"}},[e._v("#")]),e._v(" 16. Add persistent peers to your configuration file.")]),e._v(" "),a("p",[e._v("You can also use Chain of Secrets' node:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("perl -i -pe "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'s/persistent_peers = ""/persistent_peers = "64b03220d97e5dc21ec65bf7ee1d839afb6f7193\\@bootstrap.secrettestnet.io:26656"/\'')]),e._v(" ~/.secretd/config/config.toml\n")])])]),a("h3",{attrs:{id:"_17-listen-for-incoming-rpc-requests-so-that-light-nodes-can-connect-to-you"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-listen-for-incoming-rpc-requests-so-that-light-nodes-can-connect-to-you"}},[e._v("#")]),e._v(" 17. Listen for incoming RPC requests so that light nodes can connect to you:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("perl -i -pe "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'s/laddr = .+?26657"/laddr = "tcp:\\/\\/0.0.0.0:26657"/\'')]),e._v(" ~/.secretd/config/config.toml\n")])])]),a("h3",{attrs:{id:"_18-enable-secret-node-as-a-system-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-enable-secret-node-as-a-system-service"}},[e._v("#")]),e._v(" 18. Enable "),a("code",[e._v("secret-node")]),e._v(" as a system service:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" secret-node\n")])])]),a("h3",{attrs:{id:"_19-start-secret-node-as-a-system-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-start-secret-node-as-a-system-service"}},[e._v("#")]),e._v(" 19. Start "),a("code",[e._v("secret-node")]),e._v(" as a system service:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start secret-node\n")])])]),a("h3",{attrs:{id:"_20-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-if-everything-above-worked-correctly-the-following-command-will-show-your-node-streaming-blocks-this-is-for-debugging-purposes-only-kill-this-command-anytime-with-ctrl-c"}},[e._v("#")]),e._v(" 20. If everything above worked correctly, the following command will show your node streaming blocks (this is for debugging purposes only, kill this command anytime with Ctrl-C):")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("journalctl -f -u secret-node\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- Logs begin at Mon 2020-02-10 16:41:59 UTC. --\nFeb 10 21:18:34 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:34.307] Executed block                               module=state height=2629 validTxs=0 invalidTxs=0\nFeb 10 21:18:34 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:34.317] Committed state                              module=state height=2629 txs=0 appHash=34BC6CF2A11504A43607D8EBB2785ED5B20EAB4221B256CA1D32837EBC4B53C5\nFeb 10 21:18:39 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:39.382] Executed block                               module=state height=2630 validTxs=0 invalidTxs=0\nFeb 10 21:18:39 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:39.392] Committed state                              module=state height=2630 txs=0 appHash=17114C79DFAAB82BB2A2B67B63850864A81A048DBADC94291EB626F584A798EA\nFeb 10 21:18:44 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:44.458] Executed block                               module=state height=2631 validTxs=0 invalidTxs=0\nFeb 10 21:18:44 ip-172-31-41-58 secretd[8814]: I[2020-02-10|21:18:44.468] Committed state                              module=state height=2631 txs=0 appHash=D2472874A63CE166615E5E2FDFB4006ADBAD5B49C57C6B0309F7933CACC24B10\n^C\n")])])]),a("p",[e._v("You are now a full node. 🎉")]),e._v(" "),a("h3",{attrs:{id:"_21-get-your-node-id-with"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-get-your-node-id-with"}},[e._v("#")]),e._v(" 21. Get your node ID with:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretd tendermint show-node-id\n")])])]),a("p",[e._v("And publish yourself as a node with this ID:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<your-node-id>@<your-public-ip>:26656\n")])])]),a("p",[e._v("Be sure to point your CLI to your running node instead of the bootstrap node")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("secretcli config node tcp://localhost:26657\n")])])]),a("p",[e._v("If someone wants to add you as a peer, have them add the above address to their "),a("code",[e._v("persistent_peers")]),e._v(" in their "),a("code",[e._v("~/.secretd/config/config.toml")]),e._v(".")]),e._v(" "),a("p",[e._v("And if someone wants to use your node from their "),a("code",[e._v("secretcli")]),e._v(" then have them run:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli config chain-id holodeck-2\nsecretcli config output json\nsecretcli config indent "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\nsecretcli config node tcp://"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-public-ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(":26657\n")])])]),a("h3",{attrs:{id:"_22-optional-make-your-full-node-a-validator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-optional-make-your-full-node-a-validator"}},[e._v("#")]),e._v(" 22. Optional: make your full node a validator")]),e._v(" "),a("p",[e._v("Your full node is now part of the network, storing and verifying chain data and Secret Contracts, and helping to distribute transactions and blocks. It's usable as a sentry node, for people to connect their CLI or light clients, or just to support the network.")]),e._v(" "),a("p",[e._v("It is however not producing blocks yet, and you can't delegate funds to it for staking. To do that that you'll have to turn it into a validator by submitting a "),a("code",[e._v("create-validator")]),e._v(" transaction.")]),e._v(" "),a("p",[e._v("On the full node, get the pubkey of the node:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretd tendermint show-validator\n")])])]),a("p",[e._v("The pubkey is an 83-character string starting with "),a("code",[e._v("secretvalconspub...")]),e._v(".")]),e._v(" "),a("p",[e._v("On the CLI machine, run the following command. The account you use becomes the operator account for your validator, which you'll use to collect rewards, participate in on-chain governance, etc, so make sure you keep good backups of the key. "),a("code",[e._v("<moniker>")]),e._v(" is the name for your validator which is shown e.g. in block explorers.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli tx staking create-validator "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --amount"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("amount-to-delegate-to-yourself"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("uscrt "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --pubkey"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("pubkey of the full node"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --commission-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.10"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --commission-max-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.20"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --commission-max-change-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.01"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --min-self-delegation"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --moniker"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<moniker>"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --from"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$INSERT_YOUR_KEY_NAME")]),e._v("\n")])])]),a("p",[e._v("The "),a("code",[e._v("create-validator")]),e._v(" command allows using some more parameters. For more info on these and the additional parameters, run "),a("code",[e._v("secretcli tx staking create-validator --help")]),e._v(".")]),e._v(" "),a("p",[e._v("After you submitted the transaction, check you've been added as a validator:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("secretcli q staking validators "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" moniker\n")])])]),a("p",[e._v("Congratulations! You are now running a validator on the Secret Network testnet.")])])}),[],!1,null,null,null);t.default=r.exports}}]);