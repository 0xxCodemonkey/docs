{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{425:function(e,t,a){\"use strict\";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"network-upgrade-instructions-from-secret-1-to-secret-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#network-upgrade-instructions-from-secret-1-to-secret-2\"}},[e._v(\"#\")]),e._v(\" Network Upgrade Instructions from \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\" to \"),a(\"code\",[e._v(\"secret-2\")])]),e._v(\" \"),a(\"p\",[e._v(\"⚠️ Please read carefully before you begin the upgrade.\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"#network-upgrade-instructions-from-secret-1-to-secret-2\"}},[e._v(\"Network Upgrade Instructions from \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\" to \"),a(\"code\",[e._v(\"secret-2\")])])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#validators\"}},[e._v(\"Validators\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"#1-prepare-your-secret-1-validator-to-halt-after-block-1246400\"}},[e._v(\"1. Prepare your \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\" validator to halt after block #1,246,400\")])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#2-install-the-new-binaries-on-your-sgx-machine\"}},[e._v(\"2. Install the new binaries on your SGX machine\")])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#3-migrate-your-validators-signing-key\"}},[e._v(\"3. Migrate your validator's signing key\")])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#4-migrate-your-validators-wallet\"}},[e._v(\"4. Migrate your validator's wallet\")])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#5-set-up-your-sgx-machine-and-become-a-secret-2-validator\"}},[e._v(\"5. Set up your SGX machine and become a \"),a(\"code\",[e._v(\"secret-2\")]),e._v(\" validator\")])])])]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"#in-case-of-an-upgrade-failure\"}},[e._v(\"In case of an upgrade failure\")])])]),e._v(\" \"),a(\"h1\",{attrs:{id:\"validators\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#validators\"}},[e._v(\"#\")]),e._v(\" Validators\")]),e._v(\" \"),a(\"p\",[e._v(\"All coordination efforts will be done in the \"),a(\"a\",{attrs:{href:\"https://chat.scrt.network/channel/mainnet-validators\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"#mainnet-validators\"),a(\"OutboundLink\")],1),e._v(\" channel in the Secret Network Rocket.Chat.\")]),e._v(\" \"),a(\"p\",[e._v(\"⚠️ Don't delete your \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\" machine, as we might have to relaunch it.\")]),e._v(\" \"),a(\"p\",[e._v(\"⚠️ If your SGX machine has a previous \"),a(\"code\",[e._v(\"secretnetwork\")]),e._v(\" installation on it (e.g. from the testnet), you will need to remove it before you continue:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"cd\")]),e._v(\" ~\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" systemctl stop secret-node\\nsecretd unsafe-reset-all\\nsecretd reset-enclave\\nsecretd init-enclave --reset\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"apt\")]),e._v(\" purge -y secretnetwork\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"rm\")]),e._v(\" -rf ~/.secretcli/*\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"rm\")]),e._v(\" -rf ~/.secretd/*\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"rm\")]),e._v(\" -rf ~/.sgx_secrets/*\\n\")])])]),a(\"p\",[e._v(\"You're probably familiar with SGX by now:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/validators-and-full-nodes/setup-sgx.html\"}},[e._v(\"Setup SGX\")])],1),e._v(\" \"),a(\"li\",[a(\"RouterLink\",{attrs:{to:\"/validators-and-full-nodes/verify-sgx.html\"}},[e._v(\"Verify SGX\")])],1)]),e._v(\" \"),a(\"h2\",{attrs:{id:\"_1-prepare-your-secret-1-validator-to-halt-after-block-1-246-400\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-prepare-your-secret-1-validator-to-halt-after-block-1-246-400\"}},[e._v(\"#\")]),e._v(\" 1. Prepare your \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\" validator to halt after block #1,246,400\")]),e._v(\" \"),a(\"p\",[e._v(\"On the old machine (\"),a(\"code\",[e._v(\"secret-1\")]),e._v(\"):\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[e._v(\"perl -i -pe \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'s/^halt-height =.*/halt-height = 1246400/'\")]),e._v(\" ~/.secretd/config/app.toml\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" systemctl restart secret-node\\n\")])])]),a(\"h2\",{attrs:{id:\"_2-install-the-new-binaries-on-your-sgx-machine\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-install-the-new-binaries-on-your-sgx-machine\"}},[e._v(\"#\")]),e._v(\" 2. Install the new binaries on your SGX machine\")]),e._v(\" \"),a(\"p\",[e._v(\"On the new SGX machine (\"),a(\"code\",[e._v(\"secret-2\")]),e._v(\"):\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"cd\")]),e._v(\" ~\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"wget\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"https://github.com/enigmampc/SecretNetwork/releases/download/v1.0.0/secretnetwork_1.0.0_amd64.deb\"')]),e._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"echo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"87aee80a112f429db0b8b6703b1eba33accea0f08af9e65339d14d92a5186b24 secretnetwork_1.0.0_amd64.deb\"')]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" sha256sum --check\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"apt\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"install\")]),e._v(\" -y ./secretnetwork_1.0.0_amd64.deb\\n\\nsecretd init \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"'),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$MONIKER\")]),e._v('\"')]),e._v(\" --chain-id secret-2\\n\")])])]),a(\"h2\",{attrs:{id:\"_3-migrate-your-validator-s-signing-key\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-migrate-your-validator-s-signing-key\"}},[e._v(\"#\")]),e._v(\" 3. Migrate your validator's signing key\")]),e._v(\" \"),a(\"p\",[e._v(\"Copy your \"),a(\"code\",[e._v(\"~/.secretd/config/priv_validator_key.json\")]),e._v(\" from the old machine (\"),a(\"code\",[e._v(\"secret-1\")]),e._v(\") to the new SGX machine (\"),a(\"code\",[e._v(\"secret-2\")]),e._v(\") at the same location.\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"_4-migrate-your-validator-s-wallet\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-migrate-your-validator-s-wallet\"}},[e._v(\"#\")]),e._v(\" 4. Migrate your validator's wallet\")]),e._v(\" \"),a(\"p\",[e._v(\"Export the self-delegator wallet from the old machine (\"),a(\"code\",[e._v(\"secret-1\")]),e._v(\") and import to the new SGX machine (\"),a(\"code\",[e._v(\"secret-2\")]),e._v(\").\")]),e._v(\" \"),a(\"p\",[e._v(\"On the old machine (\"),a(\"code\",[e._v(\"secret-1\")]),e._v(\") use \"),a(\"code\",[e._v('secretcli keys export \"$YOUR_KEY_NAME\"')]),e._v(\".\"),a(\"br\"),e._v(\"\\nOn the new SGX machine (\"),a(\"code\",[e._v(\"secret-2\")]),e._v(\") use \"),a(\"code\",[e._v('secretcli keys import \"$YOUR_KEY_NAME\" \"$FROM_FILE_NAME\"')])]),e._v(\" \"),a(\"p\",[e._v(\"Notes:\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"If you're recovering the wallet using \"),a(\"code\",[e._v('secretcli keys add \"$YOUR_KEY_NAME\" --recover')]),e._v(\" you should also use \"),a(\"code\",[e._v(\"--hd-path \\\"44'/118'/0'/0/0\\\"\")]),e._v(\".\")]),e._v(\" \"),a(\"li\",[e._v(\"If the wallet is stored on a Ledger device, use \"),a(\"code\",[e._v(\"--legacy-hd-path\")]),e._v(\" when importing it with \"),a(\"code\",[e._v(\"secretcli keys add\")]),e._v(\".\")])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"_5-set-up-your-sgx-machine-and-become-a-secret-2-validator\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-set-up-your-sgx-machine-and-become-a-secret-2-validator\"}},[e._v(\"#\")]),e._v(\" 5. Set up your SGX machine and become a \"),a(\"code\",[e._v(\"secret-2\")]),e._v(\" validator\")]),e._v(\" \"),a(\"p\",[e._v(\"On the new SGX machine (\"),a(\"code\",[e._v(\"secret-2\")]),e._v(\"):\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"cd\")]),e._v(\" ~\\n\\nsecretd init \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$MONIKER\")]),e._v(\" --chain-id secret-2\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"wget\")]),e._v(\" -O ~/.secretd/config/genesis.json \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"https://github.com/enigmampc/SecretNetwork/releases/download/v1.0.0/genesis.json\"')]),e._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"echo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"4ca53e34afed034d16464d025291fe16a847c9aca0a259f9237413171b19b4cf .secretd/config/genesis.json\"')]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" sha256sum --check\\n\\nsecretd validate-genesis\\n\\nsecretd init-enclave\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"PUBLIC_KEY\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$(\")]),e._v(\"secretd parse attestation_cert.der \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[e._v(\"2\")]),e._v(\">\")]),e._v(\" /dev/null \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"cut\")]),e._v(\" -c \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"3\")]),e._v(\"-\"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\")\")])]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"echo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$PUBLIC_KEY\")]),e._v(\"\\n\\nsecretcli config chain-id secret-2\\nsecretcli config node tcp://secret-2.node.enigma.co:26657\\nsecretcli config trust-node \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[e._v(\"true\")]),e._v(\"\\nsecretcli config output json\\nsecretcli config indent \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[e._v(\"true\")]),e._v(\"\\n\\nsecretcli tx register auth ./attestation_cert.der --from \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"'),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$YOUR_KEY_NAME\")]),e._v('\"')]),e._v(\" --gas \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"250000\")]),e._v(\" --gas-prices \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\".25uscrt\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"SEED\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$(\")]),e._v(\"secretcli query register seed \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"'),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$PUBLIC_KEY\")]),e._v('\"')]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"cut\")]),e._v(\" -c \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"3\")]),e._v(\"-\"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\")\")])]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"echo\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$SEED\")]),e._v(\"\\n\\nsecretcli query register secret-network-params\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"mkdir\")]),e._v(\" -p ~/.secretd/.node\\n\\nsecretd configure-secret node-master-cert.der \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"'),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$SEED\")]),e._v('\"')]),e._v(\"\\n\\nperl -i -pe \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'s/persistent_peers =.*/persistent_peers = \\\"bee0edb320d50c839349224b9be1575ca4e67948\\\\@secret-2.node.enigma.co:26656\\\"/'\")]),e._v(\" ~/.secretd/config/config.toml\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" systemctl \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"enable\")]),e._v(\" secret-node\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" systemctl start secret-node \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"# (Now your new node is live and catching up)\")]),e._v(\"\\n\\nsecretcli config node tcp://localhost:26657\\n\")])])]),a(\"p\",[e._v(\"Now wait until you're done catching up. This is fast.\"),a(\"br\"),e._v(\"\\nOnce the following command outputs \"),a(\"code\",[e._v(\"true\")]),e._v(\" you can continue:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"watch\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'secretcli status | jq \\\".sync_info.catching_up == false\\\"'\")]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"Once your node is done catching up, you can unjail your validator:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[e._v(\"secretcli tx slashing unjail --from \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"'),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$YOUR_KEY_NAME\")]),e._v('\"')]),e._v(\" --gas-prices \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"0\")]),e._v(\".25uscrt\\n\")])])]),a(\"p\",[e._v(\"You’re now a validator in \"),a(\"code\",[e._v(\"secret-2\")]),e._v(\"! 🎉\")]),e._v(\" \"),a(\"p\",[e._v(\"To make sure your validator is unjailed, look for it in here:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[e._v(\"secretcli q staking validators \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" jq -r \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'.[] | select(.status == 2) | .description.moniker'\")]),e._v(\"\\n\")])])]),a(\"p\",[e._v(\"(\"),a(\"RouterLink\",{attrs:{to:\"/testnet/run-full-node-testnet.html\"}},[e._v(\"Ref for testnet instructions\")]),e._v(\")\")],1),e._v(\" \"),a(\"h1\",{attrs:{id:\"in-case-of-an-upgrade-failure\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#in-case-of-an-upgrade-failure\"}},[e._v(\"#\")]),e._v(\" In case of an upgrade failure\")]),e._v(\" \"),a(\"p\",[e._v(\"If after a few hours the Enigma team announces on the chat that the upgrade failed, we will relaunch \"),a(\"code\",[e._v(\"secret-1\")]),e._v(\".\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[e._v(\"On the old machine (\"),a(\"code\",[e._v(\"secret-1\")]),e._v(\"):\")]),e._v(\" \"),a(\"div\",{staticClass:\"language-bash extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[e._v(\"perl -i -pe \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'s/^halt-height =.*/halt-height = 0/'\")]),e._v(\" ~/.secretd/config/app.toml\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"sudo\")]),e._v(\" systemctl restart secret-node\\n\")])])])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"Wait for 67% of voting power to come back online.\")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}