{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{434:function(a,t,e){\"use strict\";e.r(t);var s=e(42),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"delegating-cli\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#delegating-cli\"}},[a._v(\"#\")]),a._v(\" Delegating (CLI)\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"delegate-to-a-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#delegate-to-a-validator\"}},[a._v(\"#\")]),a._v(\" Delegate to a Validator\")]),a._v(\" \"),e(\"p\",[a._v(\"On mainnet, you can delegate \"),e(\"code\",[a._v(\"uscrt\")]),a._v(\" to a validator. These delegators can receive part of the validator's fee revenue. Read more about the \"),e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/raw/master/Cosmos_Token_Model.pdf\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Cosmos Token Model\"),e(\"OutboundLink\")],1),a._v(\".\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"query-validators\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-validators\"}},[a._v(\"#\")]),a._v(\" Query Validators\")]),a._v(\" \"),e(\"p\",[a._v(\"You can query the list of all validators of a specific chain:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking validators\\n\")])])]),e(\"p\",[a._v(\"If you want to get the information of a single validator you can check it with:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking validator \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"bond-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bond-tokens\"}},[a._v(\"#\")]),a._v(\" Bond Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"On the Secret Network mainnet, we delegate \"),e(\"code\",[a._v(\"uscrt\")]),a._v(\", where \"),e(\"code\",[a._v(\"1scrt = 1000000uscrt\")]),a._v(\". Here's how you can bond tokens to a validator (\"),e(\"em\",[a._v(\"i.e.\")]),a._v(\" delegate):\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking delegate \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"amount\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"secretcli tx staking delegate \\\\\\n\\tsecretvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm \\\\\\n\\t1000uscrt \\\\\\n\\t--from <key-alias>\\n\")])])]),e(\"p\",[e(\"code\",[a._v(\"<validator-operator-address>\")]),a._v(\" is the operator address of the validator to which you intend to delegate. If you are running a full node, you can find this with:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --bech val\\n\")])])]),e(\"p\",[a._v(\"where \"),e(\"code\",[a._v(\"<key-alias>\")]),a._v(\" is the name of the key you specified when you initialized \"),e(\"code\",[a._v(\"secretd\")]),a._v(\".\")]),a._v(\" \"),e(\"p\",[a._v(\"While tokens are bonded, they are pooled with all the other bonded tokens in the network. Validators and delegators obtain a percentage of shares that equal their stake in this pool.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"withdraw-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#withdraw-rewards\"}},[a._v(\"#\")]),a._v(\" Withdraw Rewards\")]),a._v(\" \"),e(\"p\",[a._v(\"To withdraw the delegator rewards:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx distribution withdraw-rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"query-delegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-delegations\"}},[a._v(\"#\")]),a._v(\" Query Delegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you've submitted a delegation to a validator, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\tsecret1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\tsecretvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"unbond-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#unbond-tokens\"}},[a._v(\"#\")]),a._v(\" Unbond Tokens\")]),a._v(\" \"),e(\"div\",{staticClass:\"custom-block danger\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Please Note\")]),a._v(\" \"),e(\"p\",[a._v(\"There currently is in place a \"),e(\"em\",[a._v(\"21\")]),a._v(\" days unbonding rule, during which no rewards are handed out.\")])]),a._v(\" \"),e(\"p\",[a._v(\"If for any reason the validator misbehaves, or you just want to unbond a certain\\namount of tokens, use this following command.\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking unbond \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"The unbonding will be automatically completed when the unbonding period has passed.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"query-unbonding-delegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-unbonding-delegations\"}},[a._v(\"#\")]),a._v(\" Query Unbonding-Delegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you begin an unbonding-delegation, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current unbonding-delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Additionally, you can get all the unbonding-delegations from a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegations-from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"redelegate-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redelegate-tokens\"}},[a._v(\"#\")]),a._v(\" Redelegate Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"A redelegation is a type delegation that allows you to bond illiquid tokens from one validator to another:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking redelegate \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"src-validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"dst-validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Here you can also redelegate a specific \"),e(\"code\",[a._v(\"shares-amount\")]),a._v(\" or a \"),e(\"code\",[a._v(\"shares-fraction\")]),a._v(\" with the corresponding flags.\")]),a._v(\" \"),e(\"p\",[a._v(\"The redelegation will be automatically completed when the unbonding period has passed.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"query-redelegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-redelegations\"}},[a._v(\"#\")]),a._v(\" Query Redelegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you begin an redelegation, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking redelegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"src-valoper-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"dst-valoper-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current unbonding-delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking redelegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Additionally, you can get all the outgoing redelegations from a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"  secretcli q staking redelegations-from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"query-parameters\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-parameters\"}},[a._v(\"#\")]),a._v(\" Query Parameters\")]),a._v(\" \"),e(\"p\",[a._v(\"Parameters define high level settings for staking. You can get the current values by using:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking params\\n\")])])]),e(\"p\",[a._v(\"With the above command you will get the values for:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Unbonding time\")]),a._v(\" \"),e(\"li\",[a._v(\"Maximum numbers of validators\")]),a._v(\" \"),e(\"li\",[a._v(\"Coin denomination for staking\")])]),a._v(\" \"),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"$ secretcli q staking params\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"unbonding_time\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"1814400000000000\"')]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"max_validators\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"50\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"max_entries\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"7\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"historical_entries\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"0\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"bond_denom\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"uscrt\"')]),a._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"All these values will be subject to updates though a \"),e(\"code\",[a._v(\"governance\")]),a._v(\" process by \"),e(\"code\",[a._v(\"ParameterChange\")]),a._v(\" proposals.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"query-pool\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-pool\"}},[a._v(\"#\")]),a._v(\" Query Pool\")]),a._v(\" \"),e(\"p\",[a._v(\"A staking \"),e(\"code\",[a._v(\"Pool\")]),a._v(\" defines the dynamic parameters of the current state. You can query them with the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking pool\\n\")])])]),e(\"p\",[a._v(\"With the \"),e(\"code\",[a._v(\"pool\")]),a._v(\" command you will get the values for:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Not-bonded and bonded tokens\")]),a._v(\" \"),e(\"li\",[a._v(\"Token supply\")]),a._v(\" \"),e(\"li\",[a._v(\"Current annual inflation and the block in which the last inflation was processed\")]),a._v(\" \"),e(\"li\",[a._v(\"Last recorded bonded shares\")])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"query-delegations-to-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-delegations-to-validator\"}},[a._v(\"#\")]),a._v(\" Query Delegations To Validator\")]),a._v(\" \"),e(\"p\",[a._v(\"You can also query all of the delegations to a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"  secretcli q staking delegations-to \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"$ secretcli q staking delegations-to secretvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\\n\\n\")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}